{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Openshift Workflows\r\nA client for the [OpenShift](http://www.github.com/openshift) which provides an interface\r\nto the Broker-API for simple deployments as well as more complicated workflows.\r\n\r\n![Screenshot](https://raw.github.com/subszero/openshift-workflows/poster/images/screenshot_1.png)\r\n\r\n![Screenshot](https://raw.github.com/subszero/openshift-workflows/poster/images/screenshot_2.png)\r\n\r\n\r\n## Installation\r\n* Get the latest source code\r\n\r\n```bash\r\n$ git clone https://github.com/subszero/openshift-workflows.git\r\n```\r\n\r\n* Install NodeJS and NPM from [here](http://nodejs.org)\r\n\r\n* Install all dependencies\r\n\r\n```bash\r\n$ npm install\r\n```\r\n\r\n* Generate new SSL certificates in the `certs/` folder\r\n\r\n* Run the server and open the page in a browser\r\n\r\n```bash\r\n$ node app.js -b\r\n```\r\n\r\n## Configuration files\r\nThis application was built to be used with the FreeShift or MegaShift service provided on the [Red Hat Cloud](https://openshift.redhat.com/). However, it can be used with any deployment of the [Openshift Origin](https://github.com/openshift). If however, your deployment of Openshift is tweaked to include non-standard cartridges and templates, you will be required to make changes in the following configuration files -\r\n\r\n* `public/conf/images.json` - This file controls the images that are used to display cartridges on the screen.\r\n\r\n```javascript\r\n{\r\n    \"Node.js 0.6\": \"/img/icons/nodejs.png\",\r\n    \"Zend Server 5.6\": \"/img/icons/zend.png\",\r\n    \"Ruby 1.9\": \"/img/icons/ruby.png\",\r\n    \"JBoss Application Server 7.1\": \"/img/icons/jboss_as7.png\",\r\n    \"Python 2.6\": \"/img/icons/python.png\",\r\n    \"Jenkins Server 1.4\": \"/img/icons/jenkins.png\",\r\n    \"Ruby 1.8\": \"/img/icons/ruby.png\",\r\n    \"JBoss Enterprise Application Platform 6.0\": \"/img/icons/jboss.png\",\r\n    \"PHP 5.3\": \"/img/icons/php.png\"\r\n}\r\n```\r\nThe file stores a hash with the name of the cartridge as key and the location of the corresponding image as value. The images that are shipped with the code are placed in the `/public/img/icons` folder. However, you may give a link to a generic image on the internet.\r\n\r\n* `public/conf/templates.json` - This file controls the images that are used to display templates on the screen.\r\n\r\n```javascript\r\n{\r\n    \"CakePHP\": \"/img/icons/cakephp.png\",\r\n    \"CakePHP (TEST)\": \"/img/icons/cakephp_Test.png\",\r\n    \"Django\": \"/img/icons/django.png\",\r\n    \"Django (Test)\": \"/img/icons/django_Test.png\"\r\n}\r\n```\r\nThe file stores a hash with the name of the template as key and the location of the corresponding image as value. The images that are shipped with the code are placed in the `/public/img/icons` folder. However, you may give a link to a generic image on the internet.\r\n\r\n* `public/conf/rules.json` - This file defines dependencies between cartridges and templates, so that a semantically correct workflow can be defined.\r\n\r\n```javascript\r\n{\r\n    \"cartridge\": {\r\n        \"rockmongo-1.1\": [\"mongodb-2.2\"],\r\n        \"10gen-mms-agent-0.1\": [\"mongodb-2.2\"],\r\n        \"phpmyadmin-3.4\": [\"mysql-5.1\"]\r\n    },\r\n    \"template\": {\r\n        \"cakephp\": [\"mysql-5.1\"],\r\n        \"drupal\": [\"mysql-5.1\"],\r\n        \"rails\": [\"mysql-5.1\"],\r\n        \"wordpress\": [\"mysql-5.1\"]\r\n    }\r\n}\r\n```\r\n\r\nThe configuration file has two parts, the **cartridge hash**, which stores the dependencies of cartridges, *ie.* `\"rockmongo-1.1\": [\"mongodb-2.2\"]` means that RockMongo cannot be installed without MongoDB installed first. The second part of this configuration file, the **template hash**, stores the embedded cartridges that are installed along with the template, *ie.* `\"cakephp\": [\"mysql-5.1\"]` means that CakePHP installs MySQL as one of it's embedded cartridges.\r\n\r\n\r\n## Useful Links\r\n### Openshift\r\n* [Openshift Architecture Specification](https://openshift.redhat.com/community/wiki/architecture-overview)\r\n* [Openshift User Guide](https://openshift.redhat.com/community/sites/default/files/documents/OpenShift-2.0-User_Guide-en-US.pdf)\r\n* [Openshift REST API Guide](https://openshift.redhat.com/community/sites/default/files/documents/OpenShift-2.0-REST_API_Guide-en-US_0.pdf)\r\n\r\n### Application Architecture\r\nA basic description of the application architecture can be found in this [poster](https://github.com/subszero/openshift-workflows/raw/poster/poster_output.pdf).\r\n\r\n#### Technologies used in the backend\r\n* [NodeJS](http://www.nodejs.org/)\r\n* [ExpressJS](http://expressjs.com/) ( + [Embedded JavaScript](http://embeddedjs.com/) )\r\n* [RequestJS](https://github.com/mikeal/request)\r\n* [CommanderJS](http://visionmedia.github.com/commander.js/)\r\n\r\n\r\n\r\n#### Technologies used in the frontend\r\n* [HTML5 Rocks](http://www.html5rocks.com/en/)\r\n* [jQuery](http://jquery.com/) ( + [jQuery-UI](http://jqueryui.com/) )\r\n* [Bootstrap](http://twitter.github.com/bootstrap/)\r\n* [modernizr](http://modernizr.com/)\r\n* [AngularJS](http://angularjs.org/) ( + [Angular-UI](http://angular-ui.github.com/) + [Angular-jQuery-UI](https://github.com/danielzen/angular-jquery-ui) )\r\n* [jsPlumb](https://github.com/danielzen/angular-jquery-ui)\r\n* [SpinJS](http://fgnass.github.com/spin.js/)","name":"Openshift Workflows","tagline":"Visual Workflows for Openshift","google":""}